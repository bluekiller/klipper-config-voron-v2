[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_MAIN"].purge_and_brush_enabled %}
    
    {% if purge_and_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES_MAIN"].travel_speed * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES_MAIN"].z_drop_speed * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES_MAIN"].brush_clean_speed * 60 %}

        {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_MAIN"].purge_bucket_xyz|map('float') %}
        {% set Bx, By, Bz = printer["gcode_macro _USER_VARIABLES_MAIN"].brush_xyz|map('float') %}


        # Move to purge zone (left side)
        G90
        # G1 X{Px} Y{Py} Z{Pz} F{St}
        # Move to center of the brush
        G1 X{Bx} Y{By} Z{Bz} F{St}

        # Wipe procedure
        G91
        {% for wipe in range(6) %}
            G1 Y-5 F{Sc}
            G1 Y+5 F{Sc}
        {% endfor %}

        G1 X+20 F{Sc}
        {% for wipe in range(6) %}
            G1 X-40 F{Sc}
            G1 X+40 F{Sc}
        {% endfor %}

        G1 Z{Bz|int + 10} F{Sz}

        G90
        STATUS_READY
    {% endif %}


[gcode_macro PURGE]
description: Purge a specific amount of filament ontop of the purge bucket
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_MAIN"].purge_and_brush_enabled %}
    
    {% set DISTANCE = params.DISTANCE|default(30)|float %}
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_MAIN"].print_default_extruder_temp)|float %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}

    {% set St = printer["gcode_macro _USER_VARIABLES_MAIN"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES_MAIN"].z_drop_speed * 60 %}

    G90

    MOVE_TO_PURGE_BUCKET Z_DROP={Z_DROP}

    # Heat if needed and purge
    _LOW_TEMP_CHECK T={TEMP}
  
    G92 E0
    G1 E{DISTANCE|float} F150
  
    # Retract
    G92 E0
    G1 E-1.7 F2100
    G1 E-18.3 F150

    # Wait 20s to let the nozzle ooze before cleaning
    G91
    G1 Z5 F{Sz}
    G90
    G4 P{20 * 1000}
  
    G92 E0

    STATUS_READY


[gcode_macro MOVE_TO_PURGE_BUCKET]
description: Move over the purge bucket
# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_MAIN"].purge_and_brush_enabled %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}
    
    # Move to purge zone only if it's available, else just purge where the toolhead is
    {% if purge_and_brush_enabled %}
        SAVE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
        ### Randomly select left or right bin for purge. 0 = left, 1 = right
        SET_GCODE_VARIABLE MACRO=MOVE_TO_PURGE_BUCKET VARIABLE=bucket_pos VALUE={(range(2) | random)}
        G90
        {% set St = printer["gcode_macro _USER_VARIABLES_MAIN"].travel_speed * 60 %}
        {% set Py, Pz = printer["gcode_macro _USER_VARIABLES_MAIN"].purge_bucket_yz|map('float') %}
        ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
        {% set Px = printer["gcode_macro _USER_VARIABLES_MAIN"].bucket_start + (printer["gcode_macro _USER_VARIABLES_MAIN"].bucket_left_width / (2 - bucket_pos)) + (bucket_pos * printer["gcode_macro _USER_VARIABLES_MAIN"].bucket_gap) + (bucket_pos * (printer["gcode_macro _USER_VARIABLES_MAIN"].bucket_right_width / 2)) %}
        {% if Z_DROP == 1 %}
            G1 X{Px} Y{Py} Z{Pz} F{St}
        {% else %}
            G1 X{Px} Y{Py} F{St}
        {% endif %}
        RESTORE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
    {% endif %}

       
 